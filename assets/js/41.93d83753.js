(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{434:function(a,l,n){"use strict";n.r(l);var t=n(25),i=Object(t.a)({},(function(){var a=this,l=a.$createElement,n=a._self._c||l;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"关于-final-关键字的一些总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于-final-关键字的一些总结"}},[a._v("#")]),a._v(" 关于 final 关键字的一些总结")]),a._v(" "),n("p",[a._v("final关键字可以用在三个地方：变量、方法、类。")]),a._v(" "),n("ol",[n("li",[a._v("修饰变量：对于一个final变量，如果是基本数据类型的变量，变量一旦初始化之后不能对其数值进行修改；如果是引用类型的变量，同样在初始化后，不能指向其他的对象。")]),a._v(" "),n("li",[a._v("方法：使用final方法的原因有两个。第一个原因是把方法锁定，以防任何继承类修改它的含义；第二个原因是效率。在早期的Java实现版本中，会将final方法转为内嵌调用。但是如果方法过于庞大，可能看不到内嵌调用带来的任何性能提升。（现在的Java版本已经不需要使用final方法进行这些优化了）。类中所有的private方法都会隐式地被指定为final方法。")]),a._v(" "),n("li",[a._v("类：使用final修饰一个类时，表明这个类无法被其他类继承，同时，该类地所有成员方法都会被隐式地指定为final方法。")]),a._v(" "),n("li",[a._v("final 和 static\n"),n("ul",[n("li",[a._v("static作用于成员变量表示不论有多少对象，只保存一个当前变量的副本")]),a._v(" "),n("li",[a._v("final是用来保证变量不可更改")])])])]),a._v(" "),n("p",[a._v("参考："),n("a",{attrs:{href:"https://www.cnblogs.com/dolphin0520/p/3736238.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("浅析Java中的final关键字"),n("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=i.exports}}]);