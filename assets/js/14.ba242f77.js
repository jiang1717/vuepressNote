(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{367:function(t,a,e){t.exports=e.p+"assets/img/javacollection.9da8a587.png"},438:function(t,a,e){"use strict";e.r(a);var s=e(25),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"集合框架据结构总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合框架据结构总结"}},[t._v("#")]),t._v(" 集合框架据结构总结")]),t._v(" "),s("p",[s("img",{attrs:{src:e(367),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"collection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),s("h3",{attrs:{id:"_1-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-list"}},[t._v("#")]),t._v(" 1. List")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("ArrayList：")]),t._v(" Object数组。")]),t._v(" "),s("li",[s("strong",[t._v("Vector：")]),t._v(" Object数组。")]),t._v(" "),s("li",[s("strong",[t._v("LinkedList：")]),t._v(" 双向链表（JDK1.6之前为循环链表，JDK1.7取消了循环 ）。")])]),t._v(" "),s("h3",{attrs:{id:"_2-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-set"}},[t._v("#")]),t._v(" 2. Set")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("HashSet（无序，唯一）：")]),t._v(" 基于HashMap实现，底层采用HashMap来保存数据。")]),t._v(" "),s("li",[s("strong",[t._v("LinkedHashSet：")]),t._v(" 继承于HashSet，内部通过LinkedHashMap实现。")]),t._v(" "),s("li",[s("strong",[t._v("TreeSet（有序，唯一）：")]),t._v(" 红黑树（自平衡的排序二叉树）。")])]),t._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("HashMap：")]),t._v(" JDK1.8之前HashMap由数组+链表组成的，数组是HashMap的主体，链表则是主要为了解决哈希冲突而存在的（“拉链法”解决冲突）.JDK1.8以后在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为8）时，将链表转化为红黑树，以减少搜索时间")]),t._v(" "),s("li",[s("strong",[t._v("LinkedHashMap：")]),t._v(" 继承于 HashMap，所以它的底层仍然是基于拉链式散列结构即由数组和链表或红黑树组成。另外，LinkedHashMap 在上面结构的基础上，增加了一条双向链表，使得上面的结构可以保持键值对的插入顺序。同时通过对链表进行相应的操作，实现了访问顺序相关逻辑。")]),t._v(" "),s("li",[s("strong",[t._v("HashTable：")]),t._v(" 数组+链表，数组是HashMap的主体，链表主要是为了解决哈希冲突。")]),t._v(" "),s("li",[s("strong",[t._v("TreeMap：")]),t._v(" 红黑树（自平衡的排序二叉树）。")])]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://blog.csdn.net/qq_28033239/article/details/98204664?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.not_use_machine_learn_pai&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.not_use_machine_learn_pai",target:"_blank",rel:"noopener noreferrer"}},[t._v("java-集合框架底层数据结构总结"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);